try:	def j_group_rows( grouped_rows ):		question = thisQuestion		current_order = [row.index for row in question.rows.order]		grouped_rows = [question.attr(row).index for row in grouped_rows]		grouped_order = [rowIndex for rowIndex in current_order if rowIndex in grouped_rows]		first_item_index = current_order.index(grouped_order[0])		non_grouped_order = [rowIndex for rowIndex in current_order if rowIndex not in grouped_order]		question.rows.order = non_grouped_order[:first_item_index] + grouped_order + non_grouped_order[first_item_index:]	def j_group_rows_with_order( grouped_rows ):		question = thisQuestion		current_order = [row.index for row in question.rows.order]		grouped_rows = [question.attr(row).index for row in grouped_rows]		first_item_index = current_order.index(grouped_rows[0])		non_grouped_order = [rowIndex for rowIndex in current_order if rowIndex not in grouped_rows]		question.rows.order = non_grouped_order[:first_item_index] + grouped_rows + non_grouped_order[first_item_index:]			def j_shuffle_by( source_question ):		current_question = thisQuestion		current_order = [row.label for row in current_question.rows]		current_question.rows.order = [current_order.index(row.label) for row in source_question.rows.order if row.label in current_order]
	except:
	pass