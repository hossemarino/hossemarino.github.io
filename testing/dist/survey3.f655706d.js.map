{"mappings":"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","sources":["scripts/functions.js"],"sourcesContent":["// editor selection\r\nfunction getInputOrLine() {\r\n    const sel = editor.getSelection();\r\n    return sel.trim() || editor.getLine(editor.getCursor().line)?.trim() || \"\";\r\n}\r\n\r\nfunction setCursorAfterLine(l) {\r\n    editor = getActiveEditor();\r\n    editor.setCursor({\r\n        line: l,\r\n        ch: 0\r\n    });\r\n}\r\n\r\n// download files\r\nfunction sanitizeFilename(name) {\r\n    return name\r\n    .replace(/[^a-z0-9_\\-\\.]/gi, \"_\") // keep letters, numbers, underscores, hyphens, dots\r\n    .replace(/_+/g, \"_\") // collapse multiple underscores\r\n    .replace(/^_+|_+$/g, \"\") // trim leading/trailing underscores\r\n    .substring(0, 100); // limit length if needed\r\n}\r\n// folding for custom XML tags\r\nfunction customTagRangeFinder(cm, start) {\r\n    const lineText = cm.getLine(start.line);\r\n    const openTagMatch = lineText.match(/<([a-zA-Z0-9_-]+)(\\s[^>]*)?>/);\r\n\r\n    if (!openTagMatch)\r\n        return null;\r\n\r\n    const tagName = openTagMatch[1];\r\n\r\n    const excludedTags = [\"survey\", \"note\"];\r\n    if (excludedTags.includes(tagName.toLowerCase()))\r\n        return null;\r\n\r\n    const startCh = lineText.indexOf(\"<\" + tagName);\r\n    const startPos = CodeMirror.Pos(start.line, startCh);\r\n\r\n    let depth = 1;\r\n    const maxLine = cm.lastLine();\r\n\r\n    for (let i = start.line + 1; i <= maxLine; i++) {\r\n        const text = cm.getLine(i);\r\n\r\n        const selfClosing = new RegExp(`<${tagName}[^>]*?/>`, \"g\");\r\n        const openTags = (text.match(new RegExp(`<${tagName}(\\\\s[^>]*)?>`, \"g\")) || []).length;\r\n        const closeTags = (text.match(new RegExp(`</${tagName}>`, \"g\")) || []).length;\r\n        const selfClosingCount = (text.match(selfClosing) || []).length;\r\n\r\n        depth += openTags - closeTags - selfClosingCount;\r\n\r\n        if (depth === 0) {\r\n            const endCh = cm.getLine(i).indexOf(`</${tagName}>`) + `</${tagName}>`.length;\r\n            return {\r\n                from: startPos,\r\n                to: CodeMirror.Pos(i, endCh)\r\n            };\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n//Save/load functions\r\nfunction saveEditorContent() {\r\n    if (activeTab && tabs[activeTab]?.editor) {\r\n        const content = tabs[activeTab].editor.getValue();\r\n        localStorage.setItem(`editorTab_${activeTab}`, content);\r\n    }\r\n}\r\n\r\nfunction manualSaveEditorContent() {\r\n    saveEditorContent(); // Save all tabs\r\n\r\n    // Show notification\r\n    const notification = document.getElementById(\"saveNotification\");\r\n    notification.style.display = \"block\";\r\n\r\n    setTimeout(() => {\r\n        notification.style.display = \"none\";\r\n    }, 3500);\r\n}\r\n\r\nfunction loadEditorContent(tabName) {\r\n    const savedContent = localStorage.getItem(`editorTab_${tabName}`);\r\n    if (savedContent && tabs[tabName]?.editor) {\r\n        tabs[tabName].editor.setValue(savedContent);\r\n    }\r\n}\r\n\r\n// TABs\r\nfunction addTab() {\r\n    openModal(\"tab\");\r\n}\r\n\r\nlet tabPendingDeletion = null;\r\n\r\nfunction requestTabDeletion(tabName) {\r\n    tabPendingDeletion = tabName;\r\n    openModal(\"delete-tab\", tabName); // Show confirmation modal\r\n}\r\n\r\nfunction truncateLabel(label, max = 12) {\r\n    return label.length > max ? label.slice(0, max) + \"…\" : label;\r\n}\r\n\r\nfunction confirmTabCreation() {\r\n    const tabNameInput = document.getElementById(\"tab_name\");\r\n    const errorDisplay = document.getElementById(\"tabError\");\r\n    const tabName = tabNameInput.value.trim();\r\n\r\n    errorDisplay.textContent = \"\";\r\n    errorDisplay.style.display = \"none\";\r\n\r\n    if (!tabName) {\r\n        errorDisplay.textContent = \"Tab name cannot be empty.\";\r\n        errorDisplay.style.display = \"block\";\r\n        return;\r\n    }\r\n\r\n    if (tabs[tabName]) {\r\n        errorDisplay.textContent = \"A tab with this name already exists.\";\r\n        errorDisplay.style.display = \"block\";\r\n        return;\r\n    }\r\n\r\n    createTab(tabName);\r\n\r\n    tabNameInput.value = \"\";\r\n    bootstrap.Modal.getInstance(document.getElementById(\"surveyModal\")).hide();\r\n}\r\n\r\n//FORMATTING STUFF:\r\nfunction wrapSelection(tag) {\r\n    let editor = window.editor;\r\n    let selection = getInputOrLine();\r\n\r\n    if (selection) {\r\n        let tagRegex = new RegExp(`^<${tag}>.*</${tag}>$`);\r\n        if (tagRegex.test(selection)) {\r\n            console.error(`Selection is already wrapped in <${tag}>!`);\r\n            return;\r\n        }\r\n\r\n        let from = editor.getCursor(\"from\");\r\n        let to = editor.getCursor(\"to\");\r\n\r\n        let wrappedText = `<${tag}>${selection}</${tag}>`;\r\n        editor.replaceRange(wrappedText, from, to);\r\n\r\n        let insertStart = editor.indexFromPos(from);\r\n        let insertEnd = insertStart + wrappedText.length;\r\n\r\n        let closingTagRegex = new RegExp(`</${tag}>`);\r\n        let match = closingTagRegex.exec(wrappedText);\r\n\r\n        if (match) {\r\n            let closingTagEndOffset = wrappedText.indexOf(match[0]) + match[0].length;\r\n            let newToPos = editor.posFromIndex(insertStart + closingTagEndOffset);\r\n            editor.setSelection(from, newToPos);\r\n        } else {\r\n            console.warn(\"Could not find closing tag position correctly.\");\r\n        }\r\n\r\n        editor.focus();\r\n    }\r\n}\r\n\r\nfunction toTitleCase(str) {\r\n    const acronyms = [\"us\", \"uk\", \"eu\", \"xml\", \"id\", \"qa\", \"br\", \"brbr\", \"li\", \"ol\", \"ul\", \"css\", \"js\", \"ihut\"];\r\n    const lowercases = [\"res\"];\r\n\r\n    return str\r\n    .toLowerCase()\r\n    .split(/(\\s|-)/) // keep spaces and hyphens\r\n    .map(part => {\r\n        if (acronyms.includes(part)) {\r\n            return part.toUpperCase();\r\n        }\r\n        if (lowercases.includes(part)) {\r\n            return part;\r\n        }\r\n        return /^[a-z]/.test(part) ? part.charAt(0).toUpperCase() + part.slice(1) : part;\r\n    })\r\n    .join(\"\");\r\n}\r\n\r\n// CONTROL ELEMENTS\r\n// termination\r\nfunction addTerm() {\r\n    const selectedText = getInputOrLine();\r\n    const html = `<term label=\"term_\" cond=\"${selectedText.trim()}\"></term>`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n\r\n// quota tag\r\nfunction addQuota() {\r\n    const selectedText = getInputOrLine();\r\n    const html = `<quota label=\"quota_${selectedText.trim()}\" sheet=\"${selectedText.trim()}\" overquota=\"noqual\"/>`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n\r\n// validate tag\r\nfunction validateTag() {\r\n    const selectedText = getInputOrLine();\r\n    const html = `  <validate>\r\n${selectedText.trim()}\r\n\r\n  </validate>`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n\r\n// validate tag\r\nfunction execTag() {\r\n    const selectedText = getInputOrLine();\r\n\r\n    const html = `  <exec>\r\n${selectedText.trim()}\r\n\r\n  </exec>`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n\r\n// res\r\nfunction makeRes() {\r\n    const editor = window.editor;\r\n    const selectedText = getInputOrLine();\r\n\r\n    try {\r\n        if (!selectedText.trim()) {\r\n            alert(\"No text selected!\");\r\n            return;\r\n        }\r\n\r\n        let input = selectedText;\r\n\r\n        input = input.replace(/\\t+/g, \" \");\r\n        input = input.replace(/\\n +\\n/g, \"\\n\\n\");\r\n        input = input.replace(/\\n{2,}/g, \"\\n\");\r\n\r\n        const lines = input.trim().split(\"\\n\").map(line =>\r\n                line.replace(/^[a-zA-Z0-9]{1,2}[.:)]\\s+/, \"\").trim());\r\n\r\n        const result = lines\r\n            .filter(Boolean)\r\n            .map(line => `<res label=\"\">${line}</res>`)\r\n            .join(\"\\n\");\r\n\r\n        editor.replaceSelection(result); // ✅ Output applied here\r\n\r\n    } catch (err) {\r\n        console.error(\"makeRes() failed:\", err);\r\n        alert(\"Could not process RES tags.\");\r\n    }\r\n}\r\n// block tag\r\nfunction wrapInBlock() {\r\n    try {\r\n        const editor = window.editor;\r\n        const input = getInputOrLine().trim();\r\n\r\n        if (!input) {\r\n            alert(\"No content selected.\");\r\n            return;\r\n        }\r\n\r\n        const xml = `<block label=\"\" cond=\"1\">\r\n${input}\r\n</block>`;\r\n\r\n        editor.replaceSelection(xml);\r\n    } catch (err) {\r\n        console.error(\"wrapInBlock() failed:\", err);\r\n        alert(\"Could not wrap content in <block>.\");\r\n    }\r\n}\r\n\r\n// block tag randomizeChildren\r\nfunction wrapInBlockRandomize() {\r\n    try {\r\n        const editor = window.editor;\r\n        const input = getInputOrLine().trim();\r\n\r\n        if (!input) {\r\n            alert(\"No content selected.\");\r\n            return;\r\n        }\r\n\r\n        const xml = `<block label=\"\" cond=\"1\" randomizeChildren=\"1\">\r\n${input}\r\n</block>`;\r\n\r\n        editor.replaceSelection(xml);\r\n    } catch (err) {\r\n        console.error(\"wrapInBlock() failed:\", err);\r\n        alert(\"Could not wrap content in <block>.\");\r\n    }\r\n}\r\n\r\n// LOOP tag\r\nfunction addLoopBlock() {\r\n    try {\r\n        const editor = window.editor;\r\n        const selection = getInputOrLine().trim();\r\n\r\n        if (!selection) {\r\n            alert(\"No content selected.\");\r\n            return;\r\n        }\r\n\r\n        const tagPattern = /(radio|checkbox|text|textarea|block|number|float|select|html)/;\r\n\r\n        // Extract existing <looprow> elements\r\n        const looprowRegex = /<looprow[\\s\\S]*?<\\/looprow>/gi;\r\n        const matchedLoopRows = selection.match(looprowRegex) || [];\r\n        const loopRows = matchedLoopRows\r\n            .map(row => `  ${row.trim()}\\n`)\r\n            .join(\"\\n\");\r\n        const mainBlock = selection.replace(looprowRegex, \"\").trim();\r\n\r\n        // Extract all loopvar names\r\n        const loopVarNames = [];\r\n        const varMatchRegex = /<loopvar\\s+name=\"([^\"]+)\"/gi;\r\n        let match;\r\n        while ((match = varMatchRegex.exec(loopRows))) {\r\n            const varName = match[1].trim();\r\n            if (varName && !loopVarNames.includes(varName)) {\r\n                loopVarNames.push(varName);\r\n            }\r\n        }\r\n\r\n        const varsAttr = loopVarNames.join(\", \");\r\n\r\n        const hasAltLabel = mainBlock.includes(\"altlabel\");\r\n\r\n        const updated = hasAltLabel\r\n             ? mainBlock.replace(\r\n                new RegExp(\r\n`<${tagPattern.source}([\\\\s\\\\S]*?)label=\"([^\"]+)\"([\\\\s\\\\S]*?)altlabel=\"([^\"]+)\"`,\r\n                    \"g\"),\r\n                (_match, tag, pre, label, between, alt) =>\r\n`<${tag}${pre}label=\"${label.trim()}_[loopvar: label]\"${between}altlabel=\"${alt.trim()}_[loopvar:label]\"`)\r\n             : mainBlock.replace(\r\n                new RegExp(`<${tagPattern.source}([\\\\s\\\\S]*?)label=\"([^\"]+)\"`, \"g\"),\r\n                (_match, tag, pre, label) =>\r\n`<${tag}${pre}label=\"${label.trim()}_[loopvar: label]\"`);\r\n\r\n        const wrapped = `<loop label=\"\" vars=\"${varsAttr}\" title=\" \" suspend=\"0\">\r\n  <block label=\"\">\r\n\r\n${updated}\r\n\r\n  </block>\r\n\r\n${loopRows || `  <looprow label=\"\" cond=\"\">\r\n    <loopvar name=\"\"></loopvar>\r\n  </looprow>`}\r\n\r\n</loop>`;\r\n\r\n        editor.replaceSelection(wrapped);\r\n    } catch (err) {\r\n        console.error(\"addLoopBlock() failed:\", err);\r\n        alert(\"Could not process loop template.\");\r\n    }\r\n}\r\n\r\n// make looprows\r\nfunction makeLooprows() {\r\n    try {\r\n        const editor = window.editor;\r\n        const rawInput = getInputOrLine().trim();\r\n\r\n        if (!rawInput) {\r\n            alert(\"No content selected.\");\r\n            return;\r\n        }\r\n\r\n        // Clean tabs and normalize spacing\r\n        let cleaned = rawInput\r\n            .replace(/\\t+/g, \" \")\r\n            .replace(/\\n +\\n/g, \"\\n\\n\")\r\n            .replace(/\\n{2,}/g, \"\\n\")\r\n            .trim()\r\n            .split(\"\\n\")\r\n            .map(line => line.replace(/^[a-zA-Z0-9]{1,2}[.:)\\s]+\\s*/, \"\").trim())\r\n            .filter(line => line.length > 0);\r\n\r\n        const result = cleaned\r\n            .map((line, i) => `  <looprow label=\"${i + 1}\">\\n    <loopvar name=\"var\">${line}</loopvar>\\n  </looprow>`)\r\n            .join(\"\\n\");\r\n\r\n        editor.replaceSelection(result);\r\n    } catch (err) {\r\n        console.error(\"makeLooprows() failed:\", err);\r\n        alert(\"Could not generate looprow XML.\");\r\n    }\r\n}\r\n// make markers\r\nfunction makeMarker() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `<marker name=\"${line}\" cond=\"\"/>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// make markers\r\nfunction makeCondition() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `<condition label=\"\" cond=\"\">${line}</condition >`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// FUNCTIONS FOR ROWS\r\nfunction makeRows() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <row label=\"r${index + 1}\">${line}</row>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeRowsLow() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <row label=\"r${index + 1}\" value=\"${index + 1}\">${line}</row>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeRowsHigh() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let length = lines.length;\r\n\r\n    let xmlItems = lines.map((line, index) =>\r\n`  <row label=\"r${length - index}\" value=\"${length - index}\">${line}</row>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// FUNCTIONS FOR COLUMNS\r\nfunction makeCols() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <col label=\"c${index + 1}\">${line}</col>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeColsLow() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <col label=\"c${index + 1}\" value=\"${index + 1}\">${line}</col>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeColsHigh() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let length = lines.length;\r\n\r\n    let xmlItems = lines.map((line, index) =>\r\n`  <col label=\"c${length - index}\" value=\"${length - index}\">${line}</col>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// FUNCTIONS FOR CHOICES\r\nfunction makeChoices() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <choice label=\"ch${index + 1}\">${line}</choice>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeChoicesLow() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <choice label=\"ch${index + 1}\" value=\"${index + 1}\">${line}</choice>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\nfunction makeChoicesHigh() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let length = lines.length;\r\n\r\n    let xmlItems = lines.map((line, index) =>\r\n`  <choice label=\"ch${length - index}\" value=\"${length - index}\">${line}</choice>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// NOANSWER\r\nfunction makeNoAnswer() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <noanswer label=\"n${index + 1}\">${line}</noanswer>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// GROUPS\r\nfunction makeGroups() {\r\n    let selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n    let xmlItems = lines.map((line, index) => `  <group label=\"g${index + 1}\">${line}</group>`).join(\"\\n\");\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// QUESTION COMMENT\r\nfunction addCommentQuestion() {\r\n    let selection = getInputOrLine();\r\n\r\n    if (selection) {\r\n        let xmlItems = `  <comment>${selection}</comment>`;\r\n        window.editor.replaceSelection(xmlItems);\r\n    } else {\r\n        alert(\"No text selected!\");\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// CASES for pipe\r\nfunction makeCase() {\r\n    let selectedText = getInputOrLine();\r\n\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n\r\n    let xmlItems = \"\";\r\n    lines.forEach((line, index) => {\r\n        xmlItems += `  <case label=\"c${index + 1}\" cond=\"\">${line}</case>\\n`;\r\n    });\r\n\r\n    xmlItems += `  <case label=\"cn\" cond=\"1\">DEFAULT</case>\\n`;\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// Autofill rows for pipe\r\nfunction makeAutoFillRows() {\r\n    let selectedText = getInputOrLine();\r\n\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n\r\n    let xmlItems = \"\";\r\n    lines.forEach((line, index) => {\r\n        xmlItems += `  <row label=\"r${index + 1}\" autofill=\"\">${line}</row>\\n`;\r\n    });\r\n\r\n    xmlItems += `  <row label=\"none\" autofill=\"thisQuestion.count == 0\"><i>None of These Classifications Apply</i></row>\\n`;\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//miscelaneous\r\n//add 2 break lines\r\nfunction brbr() {\r\n    xmlItems = `<br/><br/>`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n//add break line\r\nfunction br() {\r\n    xmlItems = `<br/>`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add open end\r\nfunction addOpen() {\r\n    xmlItems = ` open=\"1\" openSize=\"25\" randomize=\"0\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n//add exclusive\r\nfunction addExclusive() {\r\n    xmlItems = ` exclusive=\"1\" randomize=\"0\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n//add aggregate\r\nfunction addAggregate() {\r\n    xmlItems = ` aggregate=\"0\" percentages=\"0\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n//add randomize=\"0\"\r\nfunction addRandomize0() {\r\n    xmlItems = ` randomize=\"0\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add optional\r\nfunction addOptional() {\r\n    xmlItems = ` optional=\"1\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add shuffle rows\r\nfunction addShuffleRows() {\r\n    xmlItems = ` shuffle=\"rows\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add shuffle cols\r\nfunction addShuffleCols() {\r\n    xmlItems = ` shuffle=\"cols\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add shuffle rows and cols\r\nfunction addShuffleRowsCols() {\r\n    xmlItems = ` shuffle=\"rows,cols\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add where=\"execute\"\r\nfunction addExecute() {\r\n    xmlItems = ` where=\"execute\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add Add Grouping/Adim Cols\r\nfunction addGroupingCols() {\r\n    xmlItems = ` grouping=\"cols\" adim=\"cols\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add Add Grouping/Adim Rows\r\nfunction addGroupingRows() {\r\n    xmlItems = ` grouping=\"rows\" adim=\"rows\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add class names\r\n//add Add rowclassnames\r\nfunction addRowClassNames() {\r\n    xmlItems = ` ss:rowClassNames=\"\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n//add Add colclassnames\r\nfunction addColClassNames() {\r\n    xmlItems = ` ss:colClassNames=\"\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n//add Add choiceclassnames\r\nfunction addChoiceClassNames() {\r\n    xmlItems = ` ss:choiceClassNames=\"\"`;\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n\r\n// add groups\r\nfunction addGroups() {\r\n    try {\r\n        const editor = window.editor;\r\n        const selectedText = getInputOrLine();\r\n\r\n        if (!selectedText.trim()) {\r\n            alert(\"Please select one or more lines to apply groups=\\\"\\\".\");\r\n            return;\r\n        }\r\n\r\n        const targetTags = [\"group\", \"col\", \"row\", \"choice\"];\r\n        let changesMade = false;\r\n\r\n        const modifiedText = selectedText.replace(\r\n                /<(\\w+)([^>]*?)>/g,\r\n                (full, tagName, attrs) => {\r\n                if (targetTags.includes(tagName) && !/groups\\s*=/.test(attrs)) {\r\n                    changesMade = true;\r\n                    return `<${tagName}${attrs} groups=\"\">`;\r\n                }\r\n                return full;\r\n            });\r\n\r\n        if (!changesMade) {\r\n            alert('No <group>, <choice>, <col>, or <row> tags missing groups=\"\" found.');\r\n            return;\r\n        }\r\n\r\n        editor.replaceSelection(modifiedText);\r\n    } catch (err) {\r\n        console.error(\"addGroups() failed:\", err);\r\n        alert(\"Something went wrong while adding groups=\\\"\\\" attributes.\");\r\n    }\r\n}\r\n\r\n// add values\r\nfunction addValues() {\r\n    const editor = window.editor;\r\n    const selected = getInputOrLine();\r\n    const targetTags = [\"row\", \"col\", \"choice\"];\r\n    let changed = false;\r\n\r\n    const updated = selected.replace(\r\n            /<(\\w+)([^>]*?)>/g,\r\n            (full, tag, attrs) => {\r\n            if (targetTags.includes(tag) && !/value\\s*=/.test(attrs)) {\r\n                changed = true;\r\n                return `<${tag}${attrs} value=\"\">`;\r\n            }\r\n            return full;\r\n        });\r\n\r\n    if (changed)\r\n        editor.replaceSelection(updated);\r\n    else\r\n        alert('No missing value=\"\" attributes found on <row>, <col>, or <choice>.');\r\n}\r\n\r\n// add values L-H\r\nfunction addValuesLow() {\r\n    const editor = window.editor;\r\n    const selected = getInputOrLine();\r\n    const targetTags = [\"row\", \"col\", \"choice\"];\r\n    let count = 1;\r\n\r\n    const updated = selected.replace(\r\n            /<(\\w+)([^>]*?)>/g,\r\n            (full, tag, attrs) => {\r\n            if (targetTags.includes(tag)) {\r\n                const cleaned = attrs.replace(/\\svalue=\".*?\"/, \"\"); // Remove existing value\r\n                return `<${tag}${cleaned} value=\"${count++}\">`;\r\n            }\r\n            return full;\r\n        });\r\n\r\n    editor.replaceSelection(updated);\r\n}\r\n// add values H-L\r\nfunction addValuesHigh() {\r\n    const editor = window.editor;\r\n    const selected = getInputOrLine();\r\n    const targetTags = [\"row\", \"col\", \"choice\"];\r\n    let matches = [...selected.matchAll(/<(\\w+)([^>]*?)>/g)];\r\n    let total = matches.filter(([_, tag]) => targetTags.includes(tag)).length;\r\n    let count = total;\r\n\r\n    const updated = selected.replace(\r\n            /<(\\w+)([^>]*?)>/g,\r\n            (full, tag, attrs) => {\r\n            if (targetTags.includes(tag)) {\r\n                const cleaned = attrs.replace(/\\svalue=\".*?\"/, \"\");\r\n                return `<${tag}${cleaned} value=\"${count--}\">`;\r\n            }\r\n            return full;\r\n        });\r\n\r\n    editor.replaceSelection(updated);\r\n}\r\n\r\n// swap rows and cols and vice versa\r\nfunction swapRowCol() {\r\n    try {\r\n        const editor = window.editor;\r\n        const selected = getInputOrLine();\r\n\r\n        if (!selected.trim()) {\r\n            alert(\"Please select some <row> or <col> tags to swap.\");\r\n            return;\r\n        }\r\n\r\n        const lines = selected.split(\"\\n\");\r\n        const updated = lines.map(line => {\r\n            let modifiedLine = line;\r\n\r\n            if (/<row/.test(line)) {\r\n                modifiedLine = modifiedLine\r\n                    .replace(/(<|\\/)row/g, \"$1col\")\r\n                    .replace(/label=([\"'])r(\\d)/g, 'label=$1c$2');\r\n            } else if (/<col/.test(line)) {\r\n                modifiedLine = modifiedLine\r\n                    .replace(/(<|\\/)col/g, \"$1row\")\r\n                    .replace(/label=([\"'])c(\\d)/g, 'label=$1r$2');\r\n            }\r\n\r\n            return modifiedLine;\r\n        });\r\n\r\n        const result = updated.join(\"\\n\");\r\n        editor.replaceSelection(result);\r\n    } catch (err) {\r\n        console.error(\"swapRowCol() failed:\", err);\r\n        alert(\"Something went wrong during row/col swapping.\");\r\n    }\r\n}\r\n\r\n// add altlabel\r\nfunction addAltlabel() {\r\n    const selectedText = getInputOrLine();\r\n    const cleaned = selectedText.trim().replace(/\\s+/g, \"_\");\r\n    const html = ` altlabel=\"${cleaned}\"`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n\r\n// add ratinDirection\r\nfunction addRatingDirection() {\r\n    const selectedText = getInputOrLine();\r\n    const html = ` ratingDirection=\"reverse\"`;\r\n    window.editor.replaceSelection(html);\r\n}\r\n// make link href\r\nfunction makeHref() {\r\n    try {\r\n        const editor = window.editor;\r\n        const input = getInputOrLine().trim();\r\n\r\n        if (!input) {\r\n            alert(\"Please select or enter a URL.\");\r\n            return;\r\n        }\r\n\r\n        const href = `<a href=\"${input}\" target=\"_blank\">${input}</a>`;\r\n        editor.replaceSelection(href);\r\n    } catch (err) {\r\n        console.error(\"makeHref() failed:\", err);\r\n        alert(\"Something went wrong while generating the hyperlink.\");\r\n    }\r\n}\r\n\r\n//make lis\r\nfunction lis() {\r\n    let selectedText = getInputOrLine();\r\n\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    let lines = selectedText.split(\"\\n\").map(line => line.trim()).filter(line => line);\r\n\r\n    let xmlItems = \"\";\r\n    lines.forEach((line) => {\r\n        xmlItems += `  <li>${line}</li>\\n`;\r\n    });\r\n\r\n    window.editor.replaceSelection(xmlItems);\r\n}\r\n// make ordered list (<ol>)\r\nfunction makeOl() {\r\n    const selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        let input = selectedText.trim();\r\n\r\n        // Remove blank lines\r\n        input = input.replace(/\\n\\n+/g, \"\\n\");\r\n\r\n        // Check if there is at least one <li>\r\n        if (!input.includes(\"<li\")) {\r\n            alert(\"<ol> tag requires at least one <li> element.\");\r\n            return;\r\n        }\r\n        const output = `<ol>\\n  ${input}\\n</ol>\\n`;\r\n        window.editor.replaceSelection(output);\r\n        return output;\r\n\r\n    } catch (error) {\r\n        console.error(\"makeOl clip failed:\", error);\r\n        alert(\"An error occurred while generating the <ol> tag.\");\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// make unordered list (<ul>)\r\nfunction makeUl() {\r\n    const selectedText = getInputOrLine();\r\n    if (!selectedText.trim()) {\r\n        alert(\"No text selected!\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        let input = selectedText.trim();\r\n\r\n        // Remove blank lines\r\n        input = input.replace(/\\n\\n+/g, \"\\n\");\r\n\r\n        // Check if there is at least one <li>\r\n        if (!input.includes(\"<li\")) {\r\n            alert(\"<ul> tag requires at least one <li> element.\");\r\n            return;\r\n        }\r\n        const output = `<ul>\\n  ${input}\\n</ul>\\n`;\r\n        window.editor.replaceSelection(output);\r\n        return output;\r\n\r\n    } catch (error) {\r\n        console.error(\"makeUl clip failed:\", error);\r\n        alert(\"An error occurred while generating the <ul> tag.\");\r\n        return \"\";\r\n    }\r\n}\r\n\r\n\r\n// pre texts\r\nfunction addPreText() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = ` ss:preText=\"\\${res.${selectedText.trim()}}\"`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\nfunction addPreTextInternal() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = ` ss:preText=\"\\${res['%s,preText' % this.label]}\"`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\nfunction makePreTextResInternal() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = `<res label=\"preText\">${selectedText.trim()}</res>`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\n// post text\r\nfunction addPostText() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = ` ss:postText=\"\\${res.${selectedText.trim()}}\"`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\nfunction addPostTextInternal() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = ` ss:postText=\"\\${res['%s,postText' % this.label]}\"`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\nfunction makePostTextResInternal() {\r\n    const selectedText = getInputOrLine();\r\n    const xmlContent = `<res label=\"postText\">${selectedText.trim()}</res>`;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\n\r\n// add contact q\r\nfunction addContactQuestion() {\r\n    const xmlContent = CONTACT_QUESTION;\r\n    window.editor.replaceSelection(xmlContent);\r\n}\r\n\r\nfunction addContactQuestionIHUT() {\r\n    const xmlContent = CONTACT_QUESTION_IHUT;\r\n    window.editor.replaceSelection(xmlContent);\r\n}"],"names":[],"version":3,"file":"survey3.f655706d.js.map","sourceRoot":"/__parcel_source_root/"}